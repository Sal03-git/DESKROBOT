import os
import time
from PIL import Image
from lib import LCD_2inch  # Adjust this import to match your LCD library

# Initialize LCD
def lcd_test():
    try:
        # Create LCD object with specific GPIO pin settings
        disp = LCD_2inch.LCD_2inch(
            rst=27,        # Reset pin set to GPIO 27
            dc=25,         # Data/Command pin set to GPIO 25
            bl=18,         # Backlight control pin set to GPIO 18 (PWM capable)
            miso=9,        # MISO is not used but if required, set appropriately
            mosi=10,       # MOSI set to GPIO 10
            cs=8,          # Chip Select pin set to GPIO 8
            clk=11         # Clock pin set to GPIO 11
        )
        disp.Init()
        disp.clear()  # Clear the screen to start fresh
        
        # Define the paths to the emotion directories
        emotion_paths = {
            "bootup": "/home/user/Desktop/Emo-main/Code/emotions/bootup",
            "happy": "/home/user/Desktop/Emo-main/Code/emotions/happy",
            "neutral": "/home/user/Desktop/Emo-main/Code/emotions/neutral"
        }

        def display_frames(emotion_path):
            """Display frames from the emotion directory"""
            frames = sorted([f for f in os.listdir(emotion_path) if f.endswith('.png')])
            for frame in frames:
                frame_path = os.path.join(emotion_path, frame)
                image = Image.open(frame_path)
                disp.ShowImage(image)  # Display image on the LCD
                time.sleep(0.1)  # Display each frame for 0.1 seconds

        # Test all emotions in sequence
        for emotion, path in emotion_paths.items():
            print(f"Displaying {emotion} emotion...")
            display_frames(path)
            time.sleep(1)  # Pause between emotions
        
        print("Clearing screen...")
        disp.clear()  # Clear the screen after displaying all emotions

    except KeyboardInterrupt:
        disp.module_exit()  # Graceful exit
        print("Test interrupted")
    except IOError as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    lcd_test()
